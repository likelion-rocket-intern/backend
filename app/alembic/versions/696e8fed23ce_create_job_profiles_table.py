"""create job_profiles table

Revision ID: 696e8fed23ce
Revises: 9463ba7082e4
Create Date: 2025-07-14 15:12:47.589490

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import JSONB
import pgvector

# revision identifiers, used by Alembic.
revision = '696e8fed23ce'
down_revision = '9463ba7082e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('job_name_ko', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('stability', sa.Float(), nullable=False),
    sa.Column('creativity', sa.Float(), nullable=False),
    sa.Column('social_service', sa.Float(), nullable=False),
    sa.Column('ability_development', sa.Float(), nullable=False),
    sa.Column('conservatism', sa.Float(), nullable=False),
    sa.Column('social_recognition', sa.Float(), nullable=False),
    sa.Column('autonomy', sa.Float(), nullable=False),
    sa.Column('self_improvement', sa.Float(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_profiles_id'), 'job_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_job_profiles_job_type'), 'job_profiles', ['job_type'], unique=True)
    op.add_column('embeddings', sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('embeddings', 'object_id',
               existing_type=sa.INTEGER(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.drop_column('embeddings', 'name')
    op.drop_column('embeddings', 'description')
    op.drop_column('embeddings', 'skill')
    op.drop_column('embeddings', 'attribute')
    op.add_column('jinro_result', sa.Column('first_job_id', sa.Integer(), nullable=True))
    op.add_column('jinro_result', sa.Column('first_job_score', sa.Float(), nullable=True))
    op.add_column('jinro_result', sa.Column('second_job_id', sa.Integer(), nullable=True))
    op.add_column('jinro_result', sa.Column('second_job_score', sa.Float(), nullable=True))
    op.add_column('jinro_result', sa.Column('third_job_id', sa.Integer(), nullable=True))
    op.add_column('jinro_result', sa.Column('third_job_score', sa.Float(), nullable=True))
    op.create_foreign_key(None, 'jinro_result', 'job_profiles', ['second_job_id'], ['id'])
    op.create_foreign_key(None, 'jinro_result', 'job_profiles', ['first_job_id'], ['id'])
    op.create_foreign_key(None, 'jinro_result', 'job_profiles', ['third_job_id'], ['id'])
    op.alter_column('resume_embeddings', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               existing_nullable=True)
    op.alter_column(
    'resumes',
    'analysis_result',
    existing_type=sa.VARCHAR(),  # 기존 타입에 맞게
    type_=sa.dialects.postgresql.JSONB(),
    postgresql_using="analysis_result::jsonb"
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'resumes',
        'analysis_result',
        existing_type=sa.VARCHAR(),  # 기존 타입에 맞게
        type_=JSONB(),
        postgresql_using="analysis_result::jsonb"
    )
    op.alter_column('resume_embeddings', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               existing_nullable=True)
    op.drop_constraint(None, 'jinro_result', type_='foreignkey')
    op.drop_constraint(None, 'jinro_result', type_='foreignkey')
    op.drop_constraint(None, 'jinro_result', type_='foreignkey')
    op.drop_column('jinro_result', 'third_job_score')
    op.drop_column('jinro_result', 'third_job_id')
    op.drop_column('jinro_result', 'second_job_score')
    op.drop_column('jinro_result', 'second_job_id')
    op.drop_column('jinro_result', 'first_job_score')
    op.drop_column('jinro_result', 'first_job_id')
    op.add_column('embeddings', sa.Column('attribute', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('embeddings', sa.Column('skill', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('embeddings', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('embeddings', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('embeddings', 'object_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('embeddings', 'extra_data')
    op.drop_index(op.f('ix_job_profiles_job_type'), table_name='job_profiles')
    op.drop_index(op.f('ix_job_profiles_id'), table_name='job_profiles')
    op.drop_table('job_profiles')
    # ### end Alembic commands ###
