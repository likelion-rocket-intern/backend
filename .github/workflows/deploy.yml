name: 'ai-resume deploy'  
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'app/**'
      - 'infraScript/**'
      - 'scripts/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'alembic.ini'
      - 'Dockerfile'
      - 'README.md'
    branches:
      - 'main'
jobs:
  makeTagAndRelease:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false
  buildImageAndPush:
    name: 도커 이미지 빌드와 푸시
    needs: makeTagAndRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"
      - name: .env 파일 생성
        env:
          ENV_CONTENT: ${{ secrets.ENV }}
        run: |
          echo "$ENV_CONTENT" > .env
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/ai-resume:${{ needs.makeTagAndRelease.outputs.tag_name }},
            ghcr.io/${{ env.OWNER_LC }}/ai-resume:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [ buildImageAndPush ]
    steps:
      - name: SSH to server
        uses: appleboy/ssh-action@master
        with:
          host: 210.113.34.187
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /dockerProjects/resume_matching/backend
            mkdir -p /dockerProjects/resume_matching/datas
            
            # Download deployment script
            curl -o /dockerProjects/resume_matching/backend/zero_downtime_deploy.py https://raw.githubusercontent.com/${{ github.repository }}/main/infraScript/zero_downtime_deploy.py 
            
            # Download CSV files
            curl -o /dockerProjects/resume_matching/datas/job_data.csv https://raw.githubusercontent.com/${{ github.repository }}/main/datas/job_data.csv
            curl -o /dockerProjects/resume_matching/datas/strengths_resume_data.csv https://raw.githubusercontent.com/${{ github.repository }}/main/datas/strengths_resume_data.csv
            curl -o /dockerProjects/resume_matching/datas/weaknesses_resume_data.csv https://raw.githubusercontent.com/${{ github.repository }}/main/datas/weaknesses_resume_data.csv
            curl -o /dockerProjects/resume_matching/datas/jinro_data.json https://raw.githubusercontent.com/${{ github.repository }}/main/datas/jinro_data.json
            curl -o /dockerProjects/resume_matching/datas/keywords.json https://raw.githubusercontent.com/${{ github.repository }}/main/datas/keywords.json
            
            chmod +x /dockerProjects/resume_matching/backend/zero_downtime_deploy.py
            python3 /dockerProjects/resume_matching/backend/zero_downtime_deploy.py 
            exit 0 